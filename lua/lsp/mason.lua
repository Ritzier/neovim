local M = {}
function M.mason(servers)
  require("mason").setup({
    ui = {
      icons = {
        check_outdated_packages_on_open = true,
        border = "none",
        package_installed = "✓",
        package_pending = "➜",
        package_uninstalled = "✗",
      },
    },
  })

  if vim.loop.os_uname().sysname ~= "Linux" then
    require("mason-tool-installer").setup({
      ensure_installed = {
        "angular-language-server",
        "arduino-language-server",
        "bash-language-server",
        "bash-debug-adapter",
        "black",
        "chrome-debug-adapter",
        "codelldb",
        "cpplint",
        "css-lsp",
        "eslint-lsp",
        "flake8",
        "goimports",
        "graphql-language-service-cli",
        "hadolint",
        "html-lsp",
        "json-lsp",
        "lua-language-server",
        "node-debug2-adapter",
        "go-debug-adapter",
        "prettierd",
        "prisma-language-server",
        "rubocop",
        "rust-analyzer",
        "clangd",
        "cmake-language-server",
        "gopls",
        "pyright",
        -- "cpptools",
        "shellcheck",
        "shfmt",
        "stylua",
        -- "php-cs-fixer",
        "jdtls",
        -- "phpactor",
        -- "php-debug-adapter",
        "elm-language-server",
        -- "jglint",
        "debugpy",
        "sql-formatter",
        -- "sqls",
        "tailwindcss-language-server",
        "omnisharp-mono",
        "clang-format",
        "typescript-language-server",
        "vetur-vls",
        "vim-language-server",
        "markdownlint",
        -- "luaformatter",
        "omnisharp-mono",
        "vint",
        "vue-language-server",
        "kotlin-language-server",
        "julia-lsp",
        "wgsl-analyzer",
        "write-good",
        "xmlformatter",
        "xo",
        "yaml-language-server",
        "yamlfmt",
        "yamllint",
        "yapf",
      },
      auto_update = true,
      run_on_start = true,
      automatic_installation = true,
    })
  end
end

return M
